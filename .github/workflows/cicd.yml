name: bad-cicd
on:
  push:
    branches:
      - '*'
  workflow_dispatch:

env:
  POSTGRES_DB: ci
  POSTGRES_USER: ci
  POSTGRES_PASSWORD: ci
  POSTGRES_HOST: db_server
  POSTGRES_PORT: 5432
  NODE_ENV: ci
  SERVER_USER: c29-bad-grp3
  SERVER_DOMAIN: bad/bad011/c29-bad-grp3
  SERVER_HOST: c29bad
  SERVER_DIR: ~/c29-bad-grp3
  PM2_NAME: c29-bad-grp3

jobs:
  test:
    runs-on: ubuntu-latest
    container: node:20.10.0-slim
    services:
      db_server:
        image: postgres:14.10-alpine3.19
        env:
          POSTGRES_DB: ${{env.POSTGRES_DB}}
          POSTGRES_USER: ${{env.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}
          POSTGRES_PORT: ${{env.POSTGRES_PORT}}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          npm install
      - name: run test cases
        run: |
          npm test
          build:
            runs-on: ubuntu-latest
            container: node:20.10.0-slim
            steps:
              - uses: actions/checkout@v3
              - name: install dependencies
                run: |
                  npm install
              - name: build typescript project
                run: |
                  npm run build
              - name: prepare archive built files
                run: |
                  mkdir -p release
                  mv package.json dist public release
              - name: upload release archive
                uses: actions/upload-artifact@v4
                with:
                  name: release-archive
                  path: BAD/BAD011/03-dark-forest/release
        
          deploy:
            if: github.ref_name == 'production'
            needs: [test, build]
            runs-on: ubuntu-latest
            steps:
              - name: add server fingerprint
                run: |
                  mkdir -p ~/.ssh
                  cd ~/.ssh
                  ssh-keyscan ${{env.SERVER_DOMAIN}} >> known_hosts
              - name: save ssh private key
                run: |
                  echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/key.pem
              - name: chmod ssh private key
                run: |
                  chmod 400 ~/.ssh/key.pem
              - name: setup ssh config
                run: |
                  echo "
                  Host ${{env.SERVER_HOST}}
                    Hostname ${{env.SERVER_DOMAIN}}
                    User ${{env.SERVER_USER}}
                    IdentityFile = ~/.ssh/key.pem
                  " > ~/.ssh/config
              - name: check connection to server
                run: |
                  ssh ${{env.SERVER_HOST}}
              - name: download release archive
                uses: actions/download-artifact@v4
                with:
                  name: release-archive
                  path: BAD/BAD011/03-dark-forest/release
              - name: upload to server
                run: |
                  cd BAD/BAD011/03-dark-forest/release
                  scp -r \
                    package.json \
                    dist \
                    public \
                    "${{env.SERVER_HOST}}:${{env.SERVER_DIR}}/"
              - name: install dependencies on server
                run: |
                  ssh ${{env.SERVER_HOST}} "
                    source ~/.nvm/nvm.sh
                    cd ${{env.SERVER_DIR}}
                    npm install --omit=dev
                  "
              - name: migrate database on server
                run: |
                  ssh ${{env.SERVER_HOST}} "
                    source ~/.nvm/nvm.sh
                    cd ${{env.SERVER_DIR}}
                    cp .env dist/
                    cd dist
                    npx knex migrate:latest
                  "
              - name: reload pm2 process on server
                run: |
                  ssh ${{env.SERVER_HOST}} "
                    source ~/.nvm/nvm.sh
                    pm2 reload ${{env.PM2_NAME}}
                  "
        